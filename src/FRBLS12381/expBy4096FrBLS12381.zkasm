;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; POST: The result is in the range [0,BLS12_381_R) because if falls back to Fr arithmetic
;;
;; expBy4096FrBLS12381:
;;             in: A ∈ [0, 2²⁵⁶-1]
;;             out: A = A⁴⁰⁹⁶ (mod BLS12_381_R) ∈ Fr
;;
;; Note: 4096 in binary is 10000 0000 0000
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; label to avoid the extra checks for zero and one
VAR GLOBAL expBy4096FrBLS12381_input_is_not_zero_nor_one

VAR GLOBAL expBy4096FrBLS12381_RR

; RESOURCES:
; -------------------------------------------
; PATH 1 input_is_0:           [steps: 7,  bin: 1]
; PATH 2 input_is_1:           [steps: 9,  bin: 2]
; PATH 3 input_is_not_0_nor_1: [steps: 80, bin: 2, arith: 12] <-- w.c.
; -------------------------------------------

expBy4096FrBLS12381:
        RR              :MSTORE(expBy4096FrBLS12381_RR)

        $               :MLOAD(expBy4096FrBLS12381_input_is_not_zero_nor_one), JMPNZ(expBy4096FrBLS12381_compute)

        ; Is A = 0?
        0n => B
        $       :EQ, JMPC(expBy4096FrBLS12381_input_is_zero)

        ; Is A = 1?
        1n => B
        $       :EQ, JMPC(expBy4096FrBLS12381_input_is_one, expBy4096FrBLS12381_compute)

; Begin of branching
expBy4096FrBLS12381_input_is_zero:
        ; 0⁴⁰⁹⁶ = 0
        0n => A         :JMP(expBy4096FrBLS12381_end)

expBy4096FrBLS12381_input_is_one:
        ; 1⁴⁰⁹⁶ = 1
        1n => A         :JMP(expBy4096FrBLS12381_end)
; End of branching

expBy4096FrBLS12381_compute:

        ; Note that 4096 = 2^12, so computing A⁴⁰⁹⁶ consists of 12 squarings

        ; 1/12
        :CALL(squareFrBLS12381) ; [steps: 5, bin: 0, arith: 1]

        ; 2/12
        :CALL(squareFrBLS12381)

        ; 3/12
        :CALL(squareFrBLS12381)

        ; 4/12
        :CALL(squareFrBLS12381)

        ; 5/12
        :CALL(squareFrBLS12381)

        ; 6/12
        :CALL(squareFrBLS12381)

        ; 7/12
        :CALL(squareFrBLS12381)

        ; 8/12
        :CALL(squareFrBLS12381)

        ; 9/12
        :CALL(squareFrBLS12381)

        ; 10/12
        :CALL(squareFrBLS12381)

        ; 11/12
        :CALL(squareFrBLS12381)

        ; 12/12
        :CALL(squareFrBLS12381)

expBy4096FrBLS12381_end:
        $ => RR         :MLOAD(expBy4096FrBLS12381_RR)
                        :RETURN

